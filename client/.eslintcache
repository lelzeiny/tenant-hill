[{"/Users/nguyennhat/Desktop/tenant-hill/client/src/index.js":"1","/Users/nguyennhat/Desktop/tenant-hill/client/src/reportWebVitals.js":"2","/Users/nguyennhat/Desktop/tenant-hill/client/src/App.js":"3","/Users/nguyennhat/Desktop/tenant-hill/client/src/pages/Home.js":"4","/Users/nguyennhat/Desktop/tenant-hill/client/src/pages/Upload.js":"5","/Users/nguyennhat/Desktop/tenant-hill/client/src/components/Alert.js":"6"},{"size":500,"mtime":1609540556363,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609540556366,"results":"9","hashOfConfig":"8"},{"size":23548,"mtime":1609670018091,"results":"10","hashOfConfig":"8"},{"size":1175,"mtime":1609662663335,"results":"11","hashOfConfig":"8"},{"size":3141,"mtime":1609636235849,"results":"12","hashOfConfig":"8"},{"size":403,"mtime":1609622421035,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"45e9ue",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/nguyennhat/Desktop/tenant-hill/client/src/index.js",[],["30","31"],"/Users/nguyennhat/Desktop/tenant-hill/client/src/reportWebVitals.js",[],"/Users/nguyennhat/Desktop/tenant-hill/client/src/App.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"/Users/nguyennhat/Desktop/tenant-hill/client/src/pages/Home.js",["50"],"import React, { useEffect, useState } from 'react';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nexport default function Home() {\n    const [imageIds, setImageIds] = useState();\n    const loadImages = async () => {\n        console.log(\"return ing imamges from frontend\");\n        try {\n            const res = await fetch('http://localhost:8000/api/images');\n            const data = await res.json();\n            setImageIds(data);\n            console.log(\"data\", data); \n        } catch (err) {\n            console.error(err);\n        }\n    };\n    useEffect(() => {\n        loadImages();\n    }, []);\n    return (\n        <div>\n            <h1 className=\"title\">Cloudinary Gallery</h1>\n            <div className=\"gallery\">\n                {imageIds &&\n                    imageIds.map((imageId, index) => (\n                        <Image\n                            key={index}\n                            cloudName=\"dwpx7quqp\"\n                            publicId={imageId}\n                            width=\"300\"\n                            crop=\"scale\"\n                        />\n                    ))}\n            </div>\n        </div>\n    );\n}",["51","52"],"/Users/nguyennhat/Desktop/tenant-hill/client/src/pages/Upload.js",["53"],"import React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport axios from 'axios';\nexport default function Upload() {\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            // await axios.post('http://localhost:8000/api/upload', {\n                \n            //     body: JSON.stringify({ data: base64EncodedImage }),\n            //     headers: { 'Content-Type': 'application/json','Access-Control-Allow-Origin' : '*',\n            //     'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS', },\n            // })\n            await fetch('http://localhost:8000/api/house', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage,\n                address:\"ahahahahah\",\n                price: \"1000\",\n            }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n    return (\n        <div>\n            <h1 className=\"title\">Upload an Image</h1>\n            <Alert msg={errMsg} type=\"danger\" />\n            <Alert msg={successMsg} type=\"success\" />\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n        </div>\n    );\n}","/Users/nguyennhat/Desktop/tenant-hill/client/src/components/Alert.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":4,"column":37,"nodeType":"60","messageId":"61","endLine":4,"endColumn":44},{"ruleId":"58","severity":1,"message":"63","line":4,"column":46,"nodeType":"60","messageId":"61","endLine":4,"endColumn":50},{"ruleId":"58","severity":1,"message":"64","line":6,"column":23,"nodeType":"60","messageId":"61","endLine":6,"endColumn":26},{"ruleId":"58","severity":1,"message":"65","line":8,"column":52,"nodeType":"60","messageId":"61","endLine":8,"endColumn":60},{"ruleId":"58","severity":1,"message":"66","line":33,"column":11,"nodeType":"60","messageId":"61","endLine":33,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":157,"column":10,"nodeType":"60","messageId":"61","endLine":157,"endColumn":23},{"ruleId":"58","severity":1,"message":"68","line":159,"column":10,"nodeType":"60","messageId":"61","endLine":159,"endColumn":20},{"ruleId":"58","severity":1,"message":"69","line":160,"column":10,"nodeType":"60","messageId":"61","endLine":160,"endColumn":16},{"ruleId":"58","severity":1,"message":"70","line":195,"column":13,"nodeType":"60","messageId":"61","endLine":195,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":218,"column":9,"nodeType":"73","endLine":218,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":334,"column":9,"nodeType":"73","endLine":334,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":396,"column":6,"nodeType":"76","endLine":396,"endColumn":8,"suggestions":"77"},{"ruleId":"71","severity":1,"message":"72","line":442,"column":11,"nodeType":"73","endLine":442,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":502,"column":11,"nodeType":"73","endLine":502,"endColumn":49},{"ruleId":"74","severity":1,"message":"78","line":588,"column":13,"nodeType":"79","endLine":593,"endColumn":4},{"ruleId":"74","severity":1,"message":"80","line":593,"column":6,"nodeType":"76","endLine":593,"endColumn":8,"suggestions":"81"},{"ruleId":"58","severity":1,"message":"82","line":594,"column":7,"nodeType":"60","messageId":"61","endLine":594,"endColumn":15},{"ruleId":"58","severity":1,"message":"83","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"54","replacedBy":"84"},{"ruleId":"56","replacedBy":"85"},{"ruleId":"58","severity":1,"message":"83","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setShow' is defined but never used.","'show' is defined but never used.","'Row' is defined but never used.","'Redirect' is defined but never used.","'login' is assigned a value but never used.","'previewSource' is assigned a value but never used.","'successMsg' is assigned a value but never used.","'errMsg' is assigned a value but never used.","'getSqrt' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.params'. Either include them or remove the dependency array.","ArrayExpression",["88"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'zipcode'. Either include it or remove the dependency array.",["89"],"'listings' is assigned a value but never used.","'axios' is defined but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [id, props.params]",{"range":"94","text":"95"},"Update the dependencies array to be: [zipcode]",{"range":"96","text":"97"},[13660,13662],"[id, props.params]",[21297,21299],"[zipcode]"]