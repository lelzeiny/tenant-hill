[{"/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/index.js":"1","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/reportWebVitals.js":"2","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/App.js":"3","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/pages/Upload.js":"4","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/pages/Home.js":"5","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/components/Alert.js":"6"},{"size":500,"mtime":1609541280641,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609541280642,"results":"9","hashOfConfig":"8"},{"size":18213,"mtime":1609655941051,"results":"10","hashOfConfig":"8"},{"size":3141,"mtime":1609652728903,"results":"11","hashOfConfig":"8"},{"size":1175,"mtime":1609652728902,"results":"12","hashOfConfig":"8"},{"size":403,"mtime":1609652728898,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1mno50b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/index.js",[],["29","30"],"/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/reportWebVitals.js",[],"/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/App.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44"],"/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/pages/Upload.js",["45"],"import React, { useState } from 'react';\nimport Alert from '../components/Alert';\nimport axios from 'axios';\nexport default function Upload() {\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            // await axios.post('http://localhost:8000/api/upload', {\n                \n            //     body: JSON.stringify({ data: base64EncodedImage }),\n            //     headers: { 'Content-Type': 'application/json','Access-Control-Allow-Origin' : '*',\n            //     'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS', },\n            // })\n            await fetch('http://localhost:8000/api/house', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage,\n                address:\"ahahahahah\",\n                price: \"1000\",\n            }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n    return (\n        <div>\n            <h1 className=\"title\">Upload an Image</h1>\n            <Alert msg={errMsg} type=\"danger\" />\n            <Alert msg={successMsg} type=\"success\" />\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n        </div>\n    );\n}","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/pages/Home.js",["46"],"import React, { useEffect, useState } from 'react';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nexport default function Home() {\n    const [imageIds, setImageIds] = useState();\n    const loadImages = async () => {\n        console.log(\"return ing imamges from frontend\");\n        try {\n            const res = await fetch('http://localhost:8000/api/images');\n            const data = await res.json();\n            setImageIds(data);\n            console.log(\"data\", data); \n        } catch (err) {\n            console.error(err);\n        }\n    };\n    useEffect(() => {\n        loadImages();\n    }, []);\n    return (\n        <div>\n            <h1 className=\"title\">Cloudinary Gallery</h1>\n            <div className=\"gallery\">\n                {imageIds &&\n                    imageIds.map((imageId, index) => (\n                        <Image\n                            key={index}\n                            cloudName=\"dwpx7quqp\"\n                            publicId={imageId}\n                            width=\"300\"\n                            crop=\"scale\"\n                        />\n                    ))}\n            </div>\n        </div>\n    );\n}","/Users/shalinbrahm/Desktop/projects/tenant-hill/client/src/components/Alert.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":6,"column":23,"nodeType":"53","messageId":"54","endLine":6,"endColumn":26},{"ruleId":"51","severity":1,"message":"56","line":6,"column":80,"nodeType":"53","messageId":"54","endLine":6,"endColumn":89},{"ruleId":"51","severity":1,"message":"57","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":14},{"ruleId":"51","severity":1,"message":"58","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":12},{"ruleId":"51","severity":1,"message":"59","line":12,"column":8,"nodeType":"53","messageId":"54","endLine":12,"endColumn":13},{"ruleId":"51","severity":1,"message":"60","line":121,"column":10,"nodeType":"53","messageId":"54","endLine":121,"endColumn":23},{"ruleId":"51","severity":1,"message":"61","line":123,"column":10,"nodeType":"53","messageId":"54","endLine":123,"endColumn":20},{"ruleId":"51","severity":1,"message":"62","line":124,"column":10,"nodeType":"53","messageId":"54","endLine":124,"endColumn":16},{"ruleId":"51","severity":1,"message":"63","line":159,"column":13,"nodeType":"53","messageId":"54","endLine":159,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":182,"column":9,"nodeType":"66","endLine":182,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":293,"column":9,"nodeType":"66","endLine":293,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":335,"column":3,"nodeType":"69","messageId":"70","endLine":337,"endColumn":4},{"ruleId":"64","severity":1,"message":"65","line":353,"column":13,"nodeType":"66","endLine":353,"endColumn":57},{"ruleId":"51","severity":1,"message":"71","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":13},{"ruleId":"51","severity":1,"message":"71","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":13},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'ListGroup' is defined but never used.","'Upload' is defined but never used.","'Home' is defined but never used.","'Alert' is defined but never used.","'previewSource' is assigned a value but never used.","'successMsg' is assigned a value but never used.","'errMsg' is assigned a value but never used.","'getSqrt' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]